C51 COMPILER V9.54   DS18B20                                                               06/22/2018 14:55:28 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\ds18b20.obj
COMPILER INVOKED BY: E:\Keil\Keil_v5\C51\BIN\C51.EXE ds18b20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\ds18b20.lst) TABS(2) OBJECT(.\Objects\ds18b20.obj)

line level    source

   1          //================== DS18B20源文件=============================
   2          #include "ds18b20.h"
   3          /*******************************************************************************
   4          * 函 数 名         : Delay1ms
   5          * 函数功能       : 延时函数
   6          * 输    入         : 无
   7          * 输    出         : 无
   8          *******************************************************************************/
   9          
  10          void Delay1ms(uint y)
  11          {
  12   1        uint x;
  13   1        for( ; y>0; y--)
  14   1        {
  15   2          for(x=110; x>0; x--);
  16   2        }
  17   1      }
  18          /*******************************************************************************
  19          * 函 数 名         : Ds18b20Init
  20          * 函数功能       : 初始化
  21          * 输    入         : 无
  22          * 输    出         : 初始化成功返回1，失败返回0
  23          *******************************************************************************/
  24          
  25          uchar Ds18b20Init()
  26          {
  27   1        uchar i;
  28   1        DSPORT = 0;      //将总线拉低480us~960us
  29   1        i = 70; 
  30   1        while(i--);//延时642us
  31   1        DSPORT = 1;     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  32   1        i = 0;
  33   1        while(DSPORT) //等待DS18B20拉低总线
  34   1        {
  35   2          Delay1ms(1);
  36   2          i++;
  37   2          if(i>5)//等待>5MS
  38   2          {
  39   3            return 0;//初始化失败
  40   3          }
  41   2        
  42   2        }
  43   1        return 1;//初始化成功
  44   1      }
  45          
  46          /*******************************************************************************
  47          * 函 数 名         : Ds18b20WriteByte
  48          * 函数功能       : 向18B20写入一个字节
  49          * 输    入         : 无
  50          * 输    出         : 无
  51          *******************************************************************************/
  52          
  53          void Ds18b20WriteByte(uchar dat)
  54          {
C51 COMPILER V9.54   DS18B20                                                               06/22/2018 14:55:28 PAGE 2   

  55   1        uint i, j;
  56   1      
  57   1        for(j=0; j<8; j++)
  58   1        {
  59   2          DSPORT = 0;         //每写入一位数据之前先把总线拉低1us
  60   2          i++;
  61   2          DSPORT = dat & 0x01;  //然后写入一个数据，从最低位开始
  62   2          i=6;
  63   2          while(i--); //延时68us，持续时间最少60us
  64   2          DSPORT = 1; //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  65   2          dat >>= 1;
  66   2        }
  67   1      }
  68          /*******************************************************************************
  69          * 函 数 名         : Ds18b20ReadByte
  70          * 函数功能       : 读取一个字节
  71          * 输    入         : 无
  72          * 输    出         : 无
  73          *******************************************************************************/
  74          
  75          
  76          uchar Ds18b20ReadByte()
  77          {
  78   1        uchar byte, bi;
  79   1        uint i, j;  
  80   1        for(j=8; j>0; j--)
  81   1        {
  82   2          DSPORT = 0;//先将总线拉低1us
  83   2          i++;
  84   2          DSPORT = 1;//然后释放总线
  85   2          i++;
  86   2          i++;//延时6us等待数据稳定
  87   2          bi = DSPORT;   //读取数据，从最低位开始读取
  88   2          /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  89   2          byte = (byte >> 1) | (bi << 7);             
  90   2          i = 4;    //读取完之后等待48us再接着读取下一个数
  91   2          while(i--);
  92   2        }       
  93   1        return byte;
  94   1      }
  95          /*******************************************************************************
  96          * 函 数 名         : Ds18b20ChangTemp
  97          * 函数功能       : 让18b20开始转换温度
  98          * 输    入         : 无
  99          * 输    出         : 无
 100          *******************************************************************************/
 101          
 102          void  Ds18b20ChangTemp()
 103          {
 104   1        Ds18b20Init();
 105   1        Delay1ms(1);
 106   1        Ds18b20WriteByte(0xcc);   //跳过ROM操作命令    
 107   1        Ds18b20WriteByte(0x44);     //温度转换命令
 108   1        //Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
 109   1         
 110   1      }
 111          /*******************************************************************************
 112          * 函 数 名         : Ds18b20ReadTempCom
 113          * 函数功能       : 发送读取温度命令
 114          * 输    入         : 无
 115          * 输    出         : 无
 116          *******************************************************************************/
C51 COMPILER V9.54   DS18B20                                                               06/22/2018 14:55:28 PAGE 3   

 117          
 118          void  Ds18b20ReadTempCom()
 119          { 
 120   1      
 121   1        Ds18b20Init();
 122   1        Delay1ms(1);
 123   1        Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 124   1        Ds18b20WriteByte(0xbe);  //发送读取温度命令
 125   1      }
 126          /*******************************************************************************
 127          * 函 数 名         : Ds18b20ReadTemp
 128          * 函数功能       : 读取温度
 129          * 输    入         : 无
 130          * 输    出         : 无
 131          *******************************************************************************/
 132          
 133          int Ds18b20ReadTemp()
 134          {
 135   1        int temp = 0;
 136   1        uchar tmh, tml;
 137   1        Ds18b20ChangTemp();       //先写入转换命令
 138   1        Ds18b20ReadTempCom();     //然后等待转换完后发送读取温度命令
 139   1        tml = Ds18b20ReadByte();    //读取温度值共16位，先读低字节
 140   1        tmh = Ds18b20ReadByte();    //再读高字节
 141   1        temp = tmh;
 142   1        temp <<= 8;
 143   1        temp |= tml;
 144   1        return temp;
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    234    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
